using UnityEngine;
using System.Collections;

public class Tabela : MonoBehaviour {
	
	public int n,Posicao_Xo;
	public float Xo,h;
	public Elementos FiSimples, fri, FiAcumulado, Fri, xi, yi; //Primeira unidade
	public Elementos Yi_Ajustado, XiYi, Xi2, Yi2; //Segunda unidade

	void Start (){
	}
	void Update (){
	}
	
	/// Assunto da primeira unidade.
	public int set_NumClasse (Elementos Elementos){
		return n = (int)Mathf.Sqrt(Elementos.ElementosN.Length); 
	}
	public float set_AmplitudeClasse (Elementos Elementos){
		return h = ((Elementos.ElementosN[Elementos.ElementosN.Length - 1] + 1) - Elementos.ElementosN [0]) / n;
	}
	public void set_Classes(Elementos Elementos){
		int Num_Elements = 0;
		float Min = 0, Max = 0;

		Min = Elementos.ElementosN [0];
		for(int i = 0; i < n; ++i){
			Max = Min + h;
			for(int j = 0; j < Elementos.ElementosN.Length; ++j){
				if(Elementos.ElementosN[j] >= Min && Elementos.ElementosN[j] < Max){
					Num_Elements += 1;//Contando o numero de elementos que estao dentro do limite minimo e maximo
				}
				else if(Elementos.ElementosN[j] >= Max){
					break;
				}
			}
			set_fi(i,Num_Elements);//Colocando os valores para cada coluna de fi
			set_Xi(i, Max, Min);//Colocando os valores para cada coluna de Xi
			Min = Max;
		}
		set_Xo();
	}
	void set_fi (int i, int Valor){
		FiSimples.ElementosN = new float[n];
		FiSimples.ElementosN[i] = Valor;
		set_fri(i);
		set_Fi(i, Valor);
	}
	void set_fri (int i) {
		fri.ElementosN = new float[n];
		fri.ElementosN[i] = (FiSimples.ElementosN[i] / FiSimples.ElementosN[FiSimples.ElementosN.Length - 1]) * 100;
	}
	void set_Fi (int i, int Valor){
		FiAcumulado.ElementosN = new float[n];
		FiAcumulado.ElementosN[i] += FiSimples.ElementosN[i];
		set_Fri(i);
	}
	void set_Fri (int i){
		Fri.ElementosN = new float[n];
		Fri.ElementosN[i] = (Fri.ElementosN[i] / Fri.ElementosN[Fri.ElementosN.Length - 1]) * 100;
	}
	void set_Xi(int posicao, float LimSup, float LimInf){
		xi.ElementosN = new float[n];
		xi.ElementosN[posicao] = (LimSup + LimInf) / 2;
	}
	void set_Xo(){
		Xo = 0;
		for(int i = 1; i < n; ++i){
			if(FiSimples.ElementosN[i] > FiSimples.ElementosN[i-1]){
				Xo = xi.ElementosN[i];
				Posicao_Xo = i;
			}
			else{ 
				Xo = xi.ElementosN[i-1];
				Posicao_Xo = i-1;
			}
		}
		set_Yi();
	}
	void set_Yi(){
		yi.ElementosN = new float[n];
		for(int i = 0; i < n; ++i){
			yi.ElementosN[i] = (xi.ElementosN[i] - Xo) / h;
		}
	}
	///############################
	/// Assunto da segunda unidade.
	public void set_XiYi(Elementos X, Elementos Y){
		XiYi.ElementosN = new float[n];
		for(int i = 0; i < X.ElementosN.Length; ++i){
			XiYi.ElementosN[i] = X.ElementosN[i] * Y.ElementosN[i];
			print(XiYi.ElementosN[i]);
		}
	}
	public void set_Xi2(Elementos X){
		Xi2.ElementosN = new float[n];
		for(int i = 0; i < X.ElementosN.Length; ++i){
			Xi2.ElementosN[i] = Mathf.Pow(X.ElementosN[i],2);
		}
	}
	public void set_Yi2(Elementos Y){
		Yi2.ElementosN = new float[n];
		for(int i = 0; i < Y.ElementosN.Length; ++i){
			Yi2.ElementosN[i] = Mathf.Pow(Y.ElementosN[i],2);
		}
	}
	public void set_YiAjustado(Elementos Y){
		Yi_Ajustado.ElementosN = new float[n];
		//Caso o sistema nao seja linear
		for(int i = 0; i < Y.ElementosN.Length; ++i){
			Yi_Ajustado.ElementosN[i] = Mathf.Log(Y.ElementosN[i]);
		}
	}
	///############################
}
