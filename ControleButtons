using UnityEngine;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.UI;
public class ControleButtons : MonoBehaviour {

	public InputField Xi, Yi, XfuncLinar, YfuncLinar, XfuncNlinar, YfuncNlinar;
	public Toggle Linear;
	public Text nX, hX, MediaX, ModaX, MedianaX, DesPadraoX, coefVariacaoX;
	public Text nY, hY, MediaY, ModaY, MedianaY, DesPadraoY, coefVariacaoY;
	public Text coefPerson;

	public Tabela Xa = null, Ya = null;
	public Formulas Xb = null, Yb = null;
	public Elementos Xc = null, Yc= null;
	public TxtToArray e = null;
		
	void Start () {
		Xc.ElementosN = e.x.ToArray();
		Yc.ElementosN = e.y.ToArray();
	}
	void Update () {
//		YfuncLinar.text = Func_Linear().ToString;
//		YfuncNlinar.text = Func_nLinear().ToString;
	}
	public void InitCalculos(){
		if(Xi.text != "" && Yi.text == "" && Linear == true){
			XfuncNlinar.DeactivateInputField();
			YfuncNlinar.DeactivateInputField();
			XfuncLinar.DeactivateInputField();
			YfuncLinar.DeactivateInputField();
			//---Primara Unidade----\\
			nX.text = Xa.set_NumClasse(Xc).ToString();
			hX.text = Xa.set_AmplitudeClasse(Xc).ToString();
			Xa.set_Classes(Xc);
			//--------------------\\
			MediaX.text = Xb.set_Media().ToString();
			MedianaX.text = Xb.set_Mediana(Xc).ToString();
			ModaX.text = Xb.set_Moda(Xc).ToString();
			DesPadraoX.text = Xb.set_DesPadrao().ToString();
			coefVariacaoX.text = Xb.set_CoefVariacao().ToString();
			//--------------------\\
		}
		//Quando tiver os valores de X, Y e o sistema seja Linear
		if(Xi.text != "" && Yi.text != "" && Linear == true){
			XfuncNlinar.DeactivateInputField();
			YfuncNlinar.DeactivateInputField();
			//---Primara Unidade----\\
			nX.text = Xa.set_NumClasse(Xc).ToString();
			hX.text = Xa.set_AmplitudeClasse(Xc).ToString();
			Xa.set_Classes(Xc);
			//--------------------\\
			nY.text = Ya.set_NumClasse(Yc).ToString();
			hY.text = Ya.set_AmplitudeClasse(Yc).ToString();
			Ya.set_Classes(Yc);
			//--------------------\\
			MediaX.text = Xb.set_Media().ToString();
			MedianaX.text = Xb.set_Mediana(Xc).ToString();
			ModaX.text = Xb.set_Moda(Xc).ToString();
			DesPadraoX.text = Xb.set_DesPadrao().ToString();
			coefVariacaoX.text = Xb.set_CoefVariacao().ToString();
			//--------------------\\
			MediaY.text = Yb.set_Media().ToString();
			MedianaY.text = Yb.set_Mediana(Yc).ToString();
			ModaY.text = Yb.set_Moda(Yc).ToString();
			DesPadraoY.text = Yb.set_DesPadrao().ToString();
			coefVariacaoY.text = Yb.set_CoefVariacao().ToString();
			//--------------------\\
			//---Segunda Unidade----\\
			Xa.set_XiYi(Xc,Yc);
			Xa.set_Xi2(Xc);
			Ya.set_Yi2(Yc);
			//--------------------\\
			coefPerson.text = Xb.Coeficiente_Person_Linear(Xc,Yc).ToString();
//			Xb.Sist_Linear(Xc,Yc);
			//--------------------\\
		}
		//Quando tiver os valores de X, Y e o sistema nao seja Linear
		else if(Xi.text != "" && Yi.text != "" && Linear == false){
			XfuncLinar.DeactivateInputField();
			YfuncLinar.DeactivateInputField();
			//---Primara Unidade----\\
			nX.text = Xa.set_NumClasse(Xc).ToString();
			hX.text = Xa.set_AmplitudeClasse(Xc).ToString();
			Xa.set_Classes(Xc);
			//--------------------\\
			nY.text = Ya.set_NumClasse(Yc).ToString();
			hY.text = Ya.set_AmplitudeClasse(Yc).ToString();
			Ya.set_Classes(Yc);
			//--------------------\\
			MediaX.text = Xb.set_Media().ToString();
			MedianaX.text = Xb.set_Mediana(Xc).ToString();
			ModaX.text = Xb.set_Moda(Xc).ToString();
			DesPadraoX.text = Xb.set_DesPadrao().ToString();
			coefVariacaoX.text = Xb.set_CoefVariacao().ToString();
			//--------------------\\
			MediaY.text = Yb.set_Media().ToString();
			MedianaY.text = Yb.set_Mediana(Yc).ToString();
			ModaY.text = Yb.set_Moda(Yc).ToString();
			DesPadraoY.text = Yb.set_DesPadrao().ToString();
			coefVariacaoY.text = Yb.set_CoefVariacao().ToString();
			//---Segunda Unidade----\\
			Xa.set_XiYi(Xc,Yc);
			Xa.set_Xi2(Xc);
			Ya.set_Yi2(Yc);
			//--------------------\\
			coefPerson.text = Yb.Coeficiente_Person_nLinear(Xc,Yc).ToString();
//			Yb.Sist_nLinear(Xc,Yc);
			//--------------------\\
		}
	}
	//Funçao para calcular Yi de um sistema linerar
	public float Func_Linear(){
		return Xb.a * float.Parse(XfuncLinar.text.ToString()) + Xb.b;
	}
	//Funçao para calcular Yi de um sistema n'ao linerar
	public float Func_nLinear(){
		return Mathf.Log(Xb.alf) + Xb.b * float.Parse(XfuncNlinar.text.ToString());
	}
	public void ButtonLoad(){
	}
	public void ButtonSalve(){
	}
	public void ButtonGrafic(){
	}
	public void ButtonTabela(){
	}
}
