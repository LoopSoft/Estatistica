using UnityEngine;
using System.Collections;

public class Tabela : MonoBehaviour {

	Elementos e;
	public int n,Posicao_Xo;
	public float Xo,h;
	public float[] fi, fri, Fi, Fri, xi, yi; //Primeira unidade
	public float[] Yi_Ajustado, XiYi, Xi2, Yi2; //Segunda unidade
	



	void Start () {
		for (int i = 0; i < e.ElementosN.Length; i++)
			print (e.ElementosN[i]);
	}
	void Update () {
	}
	
	/// Assunto da primeira unidade.
	public void set_NumClasse () {
		n = (int)Mathf.Sqrt(e.ElementosN.Length); 
	}
	public void set_AmplitudeClasse () {
		h = ((e.ElementosN[e.ElementosN.Length - 1] + 1) - e.ElementosN [0]) / n;
	}
	public void set_Classes(){
		int Num_Elements = 0;
		float Min = 0, Max = 0;

		Min = e.ElementosN [0];
		for(int i = 0; i <= n; ++i){
			Max = Min + h;
			for(int j = 0; j <= e.ElementosN[e.ElementosN.Length]; ++j){

				if(e.ElementosN[j] >= Min && e.ElementosN[j] <= Max){
					Num_Elements = Num_Elements + 1;//Contando o numero de elementos que estao dentro do limite minimo e maximo
				}
			}
			set_Xi(i, Max,Min);//Colocando os valores para cada coluna de Xi
			set_fi(i,Num_Elements);//Colocando os valores para cada coluna de fi
			Min = Max;
		}
	}
	public void set_fi (int i, int Valor) {
		fi = new float[n];
		fi [i] = Valor;
		set_fri(i);
		set_Fi(i, Valor);
	}
	public void set_fri (int i) {
		fri = new float[n];
		fri[i] = (fi[i] / fi[fi.Length - 1]) * 100;
	}
	public void set_Fi (int i, int Valor) {
		Fi = new float[n];
		Fi [0] = fi [0];
		if(i < n){
			Fi[i+1] += Valor;
			set_Fri(i);
		}
	}
	public void set_Fri (int i) {
		Fri = new float[n];
		Fri[i] = (Fri[i] / Fri[Fri.Length - 1]) * 100;

	}
	public void set_Xi(int posicao, float LimSup, float LimInf){
		xi = new float[n];
		xi[posicao] = (LimSup + LimInf) / 2;
		set_Yi(posicao);
		set_Xo (posicao);
	}
	public void set_Yi(int i){
		yi = new float[n];
		yi[i] = (xi[i] - Xo) / h;
	}
	public void set_Xo(int i){
		Xo = 0;
		if(fi[i] > fi[i - 1]){
			Xo = fi[i];
			Posicao_Xo = i;
		}
		else{ 
			Xo = fi[i - 1];
			Posicao_Xo = i - 1;
		}
	}
	///############################
	/// Assunto da segunda unidade.
	public void set_YiAjustado(){
		//Caso o sistema nao seja linear
		Yi_Ajustado = new float[n];
		for(int i = 0; i <= e.ElementosY.Length; ++i){
			Yi_Ajustado[i] = Mathf.Log(e.ElementosY[i]);
		}
	}
	public void set_XiYi(){
		for(int i = 0; i <= e.ElementosX.Length; ++i){
			XiYi[i] = e.ElementosX[i] * e.ElementosY[i];
		}
	}
	public void set_Xi2(){
		for(int i = 0; i <= e.ElementosX.Length; ++i){
			Xi2[i] = Mathf.Pow(e.ElementosX[i],2);
		}
	}
	public void set_Yi2(){
		for(int i = 0; i <= e.ElementosX.Length; ++i){
			Yi2[i] = Mathf.Pow(e.ElementosY[i],2);
		}
	}
	///############################
}
